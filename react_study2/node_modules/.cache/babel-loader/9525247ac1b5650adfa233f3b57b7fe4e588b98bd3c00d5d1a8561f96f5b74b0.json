{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\react\\\\react_study2\\\\src\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [data, setData] = useState({\n    id: '',\n    pwd: ''\n  }); //두가지를 객체화 하여 한번에 저장\n  const handleChange = e => {\n    //객체 두개를 처리하기 위한 과정\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8090/test/api/customer/login', data).then(res => {\n      //로그인 성공여부\n      console.log(res.data);\n      if (res.data === 'success') {\n        //스로리지에 저장\n        window.sessionStorage.setItem('loginId', data.id); //단순하게 id를 저장한다\n      } else {\n        alert(\"로그인에 실패했습니다.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: data.id,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"pwd\",\n        value: data.pwd,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 100\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), window.sessionStorage.getItem('loginId') ? '로그인 상태' : '비로그인 상태']\n  }, void 0, true);\n};\n_s(LoginForm, \"HnlJtVAf6KvXWjNYGNgIuQ39qNA=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","data","setData","id","pwd","handleChange","e","target","name","value","handleSubmit","preventDefault","post","then","res","console","log","window","sessionStorage","setItem","alert","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","getItem","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/react/react_study2/src/LoginForm.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () =>{\r\n    const [data, setData] = useState({id:'', pwd:''}); //두가지를 객체화 하여 한번에 저장\r\n    const handleChange = (e)=> {   //객체 두개를 처리하기 위한 과정\r\n        setData({\r\n            ...data,\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8090/test/api/customer/login', data).then(res=>{\r\n            //로그인 성공여부\r\n            console.log(res.data);\r\n            if(res.data === 'success'){\r\n                //스로리지에 저장\r\n                window.sessionStorage.setItem('loginId', data.id); //단순하게 id를 저장한다\r\n            }else {\r\n                alert(\"로그인에 실패했습니다.\");\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"id\" value={data.id} onChange={handleChange}></input><br />\r\n                <input type=\"password\" name=\"pwd\" value={data.pwd} onChange={handleChange}></input><br />\r\n                <input type=\"submit\" value=\"로그인\"/>\r\n\r\n            </form>\r\n            {window.sessionStorage.getItem('loginId')? '로그인 상태':'비로그인 상태'}\r\n        </>\r\n    );\r\n};\r\nexport default LoginForm;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAACU,EAAE,EAAC,EAAE;IAAEC,GAAG,EAAC;EAAE,CAAC,CAAC,CAAC,CAAC;EACnD,MAAMC,YAAY,GAAIC,CAAC,IAAI;IAAI;IAC3BJ,OAAO,CAAC;MACJ,GAAGD,IAAI;MACP,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAIF,CAAC,CAACC,MAAM,CAACE;IAC/B,CAAC,CAAC;EACN,CAAC;EACD,MAAMC,YAAY,GAAIJ,CAAC,IAAG;IACtBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBjB,KAAK,CAACkB,IAAI,CAAC,+CAA+C,EAAEX,IAAI,CAAC,CAACY,IAAI,CAACC,GAAG,IAAE;MACxE;MACAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACb,IAAI,CAAC;MACrB,IAAGa,GAAG,CAACb,IAAI,KAAK,SAAS,EAAC;QACtB;QACAgB,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,SAAS,EAAElB,IAAI,CAACE,EAAE,CAAC,CAAC,CAAC;MACvD,CAAC,MAAK;QACFiB,KAAK,CAAC,cAAc,CAAC;MACzB;IACJ,CAAC,CAAC;EACN,CAAC;EAGD,oBACIxB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA;MAAM0B,QAAQ,EAAEZ,YAAa;MAAAW,QAAA,gBACzBzB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,IAAI;QAACC,KAAK,EAAER,IAAI,CAACE,EAAG;QAACqB,QAAQ,EAAEnB;MAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAAhC,OAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnFhC,OAAA;QAAO2B,IAAI,EAAC,UAAU;QAACf,IAAI,EAAC,KAAK;QAACC,KAAK,EAAER,IAAI,CAACG,GAAI;QAACoB,QAAQ,EAAEnB;MAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAAhC,OAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzFhC,OAAA;QAAO2B,IAAI,EAAC,QAAQ;QAACd,KAAK,EAAC;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC,EACNX,MAAM,CAACC,cAAc,CAACW,OAAO,CAAC,SAAS,CAAC,GAAE,QAAQ,GAAC,SAAS;EAAA,eAC/D,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAlCID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}